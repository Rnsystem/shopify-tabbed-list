{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'component-part_def.css' | asset_url | stylesheet_tag }}
{{ 'section-blog-slide.css' | asset_url | stylesheet_tag }} 

<link rel="stylesheet" href="{{ 'component-slider.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'template-collection.css' | asset_url }}" media="print" onload="this.media='all'">
{%- if section.settings.enable_quick_add -%}
  <link rel="stylesheet" href="{{ 'quick-add.css' | asset_url }}" media="print" onload="this.media='all'">
  <script src="{{ 'quick-add.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
{%- endif -%}
<noscript>{{ 'component-slider.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'template-collection.css' | asset_url | stylesheet_tag }}</noscript>

{%- style -%}
  {% render "section-css" %}
  

  .section-{{ section.id }} {
  {%- if section.settings.background_color != blank -%}
    background: {{ section.settings.background_color }};
  {%- endif -%}
  {%- if section.settings.background_image != blank -%}
    background-image: url({{ section.settings.background_image | img_url: 'master' }});
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
  {%- endif -%}
  }
  
  .section-{{ section.id }} span.ranking_num {
        font-size: 20px;
        font-family: serif;
  }
{%- endstyle -%}

{%- liquid
  assign products_to_display = section.settings.blog.articles_count

  if section.settings.blog.articles_count > section.settings.products_to_show
    assign products_to_display = section.settings.products_to_show
    assign more_in_collection = true
  endif

  if section.settings.blog2.all_products_count > section.settings.products_to_show
    assign more_in_collection2 = true
  endif
  if section.settings.blog3.all_products_count > section.settings.products_to_show
    assign more_in_collection3 = true
  endif
  if section.settings.blog4.all_products_count > section.settings.products_to_show
    assign more_in_collection4 = true
  endif
  if section.settings.blog5.all_products_count > section.settings.products_to_show
    assign more_in_collection5 = true
  endif

  assign columns_mobile_int = section.settings.columns_mobile | plus: 0
  assign show_mobile_slider = false
  if section.settings.swipe_on_mobile
    assign show_mobile_slider = true
  endif

  assign show_desktop_slider = false
  if section.settings.enable_desktop_slider and products_to_display > section.settings.columns_desktop
    assign show_desktop_slider = true
  endif

  assign tab_mode = false

  for block in section.blocks
    if forloop.first
      assign tab_length = forloop.length
    endif
  endfor 
  
  if tab_length > 1
    assign tab_mode = true
  endif 


-%}

{% if tab_mode == true %}
<style>
.section-{{ section.id }} .tab-list_wrap {
  width: 100%;
  max-width: 100%;
  overflow-x: auto;
}

.section-{{ section.id }} .tab-list {
  display: flex;
  flex-wrap: wrap;
  justify-content: start;
  margin-bottom: 20px;
  width: max-content;
  min-width: 100%;
}

.section-{{ section.id }} .tab-list li {
  margin-right: 1em;
  cursor: pointer;
}

{% if section.settings.tab_position == "center" %}
.section-{{ section.id }} .tab-list {
  justify-content: center;
}
.section-{{ section.id }} .tab-list li:first-child {
  margin-left: 1em;
}
{% endif %}

{% if section.settings.tab_position == "right" %}
.section-{{ section.id }} .tab-list {
  justify-content: flex-end;
}
.section-{{ section.id }} .tab-list li:last-child {
  margin-right: 0;
}
{% endif %}

.section-{{ section.id }} .tab-list li.active {
  /* border-bottom: 1px solid currentcolor; */
}

.section-{{ section.id }} .tab-list li:hover {
  /* border-bottom: 1px solid currentcolor; */
  background-color: #595959;
  color: #fff;
  cursor: pointer;
}

.section-{{ section.id }} .tab-container {
}

.section-{{ section.id }} .tab-content {
  display: none;
}

.section-{{ section.id }} .tab-content > * {
  opacity: 0;
  transition: 0.3s;
}

.section-{{ section.id }} .tab-content.active {
  display: block;
  opacity: 1;
  animation-duration: 0.6s;
  animation-name: fade-in;
}

.section-{{ section.id }} .tab-content.active > * {
  opacity: 1;
  transition: 0.3s;
}

.section-{{ section.id }} .fade {
  animation: fadeIn 0.2s ease 0.3s 1 normal;
}

@keyframes fadeIn {
  0% {opacity: 0}
  100% {opacity: 1}
}
</style>
{% endif %}


<style>
.section-{{ section.id }} .tab-list {
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
  padding: 0;
  margin: 0 0 20px 0;
  list-style: none;
}

.section-{{ section.id }} .tab-item {
  display: inline-block;
  background-color: #f0f0f0;
  color: #333;
  padding: 6px 12px;
  border-radius: 20px;
  font-size: 14px;
  cursor: pointer;
  transition: background-color 0.3s ease, color 0.3s ease;
  border: none;
  box-shadow: none;
}

.section-{{ section.id }} .tab-item:hover {
  background-color: #e0e0e0;
  border: none;
  box-shadow: none;
}

.section-{{ section.id }} .tab-item.active {
  background-color: #595959;
  color: #fff;
  border: none;
  box-shadow: none;
}


.nl-pagination { display:flex; align-items:center; gap:.5rem; justify-content:center; margin-top:1rem; }
.nl-page-list { display:flex; gap:.25rem; list-style:none; padding:0; margin:0 .5rem; }
.nl-page-number { border:1px solid #ddd; padding:.4rem .6rem; border-radius:.25rem; cursor:pointer; }
.nl-page-number.is-active { pointer-events:none; border-color:#333; font-weight:600; }
.page-item.is-hidden { display:none; }
.nl-page-btn[disabled] { opacity:.4; pointer-events:none; }

/* ▼ ページネーションをタブと同じ“ピル型”デザインに統一（CSSのみ） */
.section-{{ section.id }} .nl-pagination {
  display: flex;
  align-items: center;
  justify-content: center;   /* 必要に応じて left / right に変更可 */
  gap: 8px;
  margin-top: 12px;
  width: 100%;
}

.section-{{ section.id }} .nl-page-list {
  display: flex;
  gap: 8px;
  padding: 0;
  margin: 0;
  list-style: none;
  flex-wrap: wrap;            /* 折り返し */
}

/* タブの .tab-item と同等の見た目を適用 */
.section-{{ section.id }} .nl-page-number,
.section-{{ section.id }} .nl-page-btn {
  appearance: none;
  background-color: #f0f0f0;
  color: #333;
  padding: 6px 12px;
  border-radius: 20px;
  font-size: 14px;
  border: none;
  box-shadow: none;
  cursor: pointer;
  transition: background-color .3s ease, color .3s ease;
  line-height: 1;             /* 高さを揃える */
  white-space: nowrap;        /* 数字や「前へ/次へ」を折り返さない */
}

/* hover もタブに合わせる */
.section-{{ section.id }} .nl-page-number:hover,
.section-{{ section.id }} .nl-page-btn:hover {
  background-color: #e0e0e0;
  color: #333;
}

/* アクティブ（JSが付与する .is-active をタブの .active 相当で表現） */
.section-{{ section.id }} .nl-page-number.is-active {
  background-color: #595959;
  color: #fff;
  pointer-events: none;       /* アクティブはクリック不可に */
}

/* 無効状態（前へ/次へ） */
.section-{{ section.id }} .nl-page-btn[disabled] {
  opacity: .45;
  pointer-events: none;
}

/* アクセシビリティ：フォーカスリング */
.section-{{ section.id }} .nl-page-number:focus-visible,
.section-{{ section.id }} .nl-page-btn:focus-visible {
  outline: 2px solid #595959;
  outline-offset: 2px;
}


</style>


<div id="parts_Sec_{{ section.id }}" class="page-full-width section-{{ section.id }} section-{{ section.id }}-view_mode section-{{ section.id }}-background section-{{ section.id }}-padding section-{{ section.id }}-margin{% if section.settings.section_class_plus != blank %} {{ section.settings.section_class_plus | handleize }}{% endif %} blog-slide{% if section.settings.design_type %} {{section.settings.design_type}}{% endif %}" data-section="{{ section.id }}">
  <div class="collection">

  {% comment %} heading {% endcomment %}
  {% render 'd_title' %}

    {% if tab_mode == true %}
    <div class="part_inner_wrap page-width tags_wrap">
    <div class="tab-list_wrap">
    <ul class="tab-list  {% if tab_mode == true %}tab_list_box{% endif %}">
      {% for block in section.blocks %}
        <li class="tab-item {% if forloop.first %}active{% endif %}"><span>{% if block.settings.tab != blank %}{{ block.settings.tab }}{% else %}{{ block.settings.blog_cate.title }}{% endif %}</span></li>
      {% endfor %}
    </ul>
    </div>
    </div>
    {% endif %}

    {% if tab_mode == true %}
    <div class="tab-container ">
    {% endif %}

    

{% for block in section.blocks %}

  {%- assign block_uid = section.id | append: '-' | append: block.id -%}
  <div class="page-width tab-content {% if forloop.first %} active {% endif %}">
    <slider-component class="slider-mobile-gutter{% if section.settings.full_width %} slider-component-full-width{% endif %}{% if show_desktop_slider %} slider-component-desktop{% endif %}">
      <ul id="Slider-{{ block_uid }}" class="grid product-grid contains-card{% if settings.card_style == 'standard' %} contains-card--standard{% endif %} grid--{{ section.settings.columns_desktop }}-col-desktop grid--{{ section.settings.columns_mobile }}-col-tablet-down{% if show_mobile_slider or show_desktop_slider %} slider{% if show_desktop_slider %} slider--desktop{% endif %}{% if show_mobile_slider %} slider--tablet grid--peek{% endif %}{% endif %}" role="list" aria-label="{{ 'sections.featured_collection.slider' | t }}">

        {%- assign article_cnt = 0 -%}
        {%- assign article_cnt_max = section.settings.products_to_show -%}
        {%- assign filter_tag = block.settings.filter_tag -%}

        {%- for article in block.settings.blog_cate.articles limit: 100 -%}
          {%- if article.tags contains filter_tag -%}
            {%- assign article_cnt = article_cnt | plus: 1 -%}
            {%- comment %}
              各記事が属するページ番号（1始まり）を計算
              (article_cnt-1) / article_cnt_max の整数除算に +1
            {% endcomment -%}
            {%- assign current_page = article_cnt | minus: 1 | divided_by: article_cnt_max | plus: 1 -%}

            <li
              id="Slide-{{ block_uid }}-{{ article_cnt }}"
              class="grid__item{% if show_mobile_slider or show_desktop_slider %} slider__slide{% endif %} page-item page-{{ current_page }}{% if current_page != 1 %} is-hidden{% endif %}"
              data-page="{{ current_page }}"
            >
              <div class="card-wrapper">
                <a href="{{ article.url }}">
                  {% if article.image %}
                    <img src="{{ article.image.src | img_url: 'master' }}" class="blog__image" alt="{{ article.image.alt }}" width="{{ article.image.width }}" height="{{ article.image.height }}">
                  {% endif %}
                  <div class="text-wrapper">
                    <h3>{{ article.title }}</h3>
                    {% if section.settings.time %}
                      <span>{{ article.published_at | time_tag: '%Y.%m.%d' }}</span>
                    {% endif %}
                    {% if article.metafields.custom.company_name %}
                      <h4>{{ article.metafields.custom.company_name }} 様</h4>
                    {% endif %}
                  </div>
                </a>
              </div>
            </li>
          {%- endif -%}
        {%- endfor -%}
      </ul>

      {%- if show_mobile_slider or show_desktop_slider -%}
        <div class="slider-buttons no-js-hidden">
          <button type="button" class="slider-button slider-button--prev" name="previous" aria-label="{{ 'general.slider.previous_slide' | t }}" aria-controls="Slider-{{ block_uid }}">{% render 'icon-caret' %}</button>
          <div class="slider-counter caption">
            <span class="slider-counter--current">1</span>
            <span aria-hidden="true"> / </span>
            <span class="visually-hidden">{{ 'general.slider.of' | t }}</span>
            <span class="slider-counter--total">{{ products_to_display }}</span>
          </div>
          <button type="button" class="slider-button slider-button--next" name="next" aria-label="{{ 'general.slider.next_slide' | t }}" aria-controls="Slider-{{ block_uid }}">{% render 'icon-caret' %}</button>
        </div>
      {%- endif -%}
    </slider-component>

    {%- comment %} 総ページ数を算出してページ番号UIを生成 {% endcomment -%}
    {%- assign pagination_index_max = article_cnt | divided_by: article_cnt_max | ceil -%}

    {% if pagination_index_max > 1 %}
      <nav class="nl-pagination" id="Paginate-{{ block_uid }}" aria-label="ページネーション">
        <button class="nl-page-btn prev" data-target="{{ block_uid }}" data-move="-1" disabled>前へ</button>
        <ul class="nl-page-list">
          {%- for pagination_index in (1..pagination_index_max) -%}
            <li>
              <button
                class="nl-page-number{% if forloop.first %} is-active{% endif %}"
                data-target="{{ block_uid }}"
                data-page="{{ pagination_index }}"
                aria-current="{% if forloop.first %}page{% endif %}"
              >
                {{ pagination_index }}
              </button>
            </li>
          {%- endfor -%}
        </ul>
        <button class="nl-page-btn next" data-target="{{ block_uid }}" data-move="1">次へ</button>
      </nav>
    {% endif %}

    {%- if section.settings.show_view_all -%}
      <div class="center collection__view-all">
        <a href="{{ block.settings.blog_url }}"
          class="{% if section.settings.view_all_style == 'link' %}link underlined-link{% elsif section.settings.view_all_style == 'solid' %}button{% else %}button button--secondary{% endif %}">
          ほかの事例も見る
        </a>
      </div>
    {%- endif -%}
  </div>
{% endfor %}


    {%- if section.settings.show_view_all and more_in_collection5 -%}
      <div class="center collection__view-all">
        <a href="{{ section.settings.blog5.url }}"
          class="{% if section.settings.view_all_style == 'link' %}link underlined-link{% elsif section.settings.view_all_style == 'solid' %}button{% else %}button button--secondary{% endif %}"
          aria-label="{{ 'sections.featured_collection.view_all_label' | t: collection_name: section.settings.blog5.title }}"
        >
          {{ 'sections.featured_collection.view_all' | t }}
        </a>
      </div>
    {%- endif -%}
    </div>


    {% if tab_mode == true %}
    </div>
    {% endif %}

</div>

{% if tab_mode == true %}

<script>
{
  const tabItem{{ tab_name }} = document.querySelectorAll('.section-{{ section.id }} .tab-item');
  const tabContent{{ tab_name }} = document.querySelectorAll('.section-{{ section.id }} .tab-content');

  for (let i = 0; i < tabItem{{ tab_name }}.length; i++) {
    tabItem{{ tab_name }}[i].addEventListener('click', function () {
      // すべてのtabItemとtabContentからactiveを削除
      tabItem{{ tab_name }}.forEach(item => item.classList.remove('active'));
      tabContent{{ tab_name }}.forEach(content => {
        content.classList.remove('active');
        content.style.display = 'none'; // 一旦完全非表示
      });

      // このタブボタンをアクティブに
      this.classList.add('active');

      // 配列化してインデックスを取得
      const aryTabs{{ tab_name }} = Array.prototype.slice.call(tabItem{{ tab_name }});
      const index{{ tab_name }} = aryTabs{{ tab_name }}.indexOf(this);

      // 対象のtabContentを少し遅れて表示
      setTimeout(() => {
        const targetContent = tabContent{{ tab_name }}[index{{ tab_name }}];
        targetContent.style.display = 'block'; // 表示
        targetContent.classList.add('active'); // activeクラスも追加
      }, 100); // 100msの遅延で表示（お好みで調整可）
    });
  }
}
</script>


<script>
document.addEventListener('DOMContentLoaded', function() {
  function updatePager(blockUid, toPage) {
    const list = document.getElementById('Slider-' + blockUid);
    if (!list) return;
    const items = list.querySelectorAll('.page-item');
    const maxPage = Math.max(...Array.from(items).map(li => parseInt(li.dataset.page, 10) || 1));

    // 範囲ガード
    const page = Math.min(Math.max(1, toPage), maxPage);

    // 表示切り替え
    items.forEach(li => {
      li.classList.toggle('is-hidden', parseInt(li.dataset.page, 10) !== page);
    });

    // ページ番号UIのアクティブ切替
    const nav = document.getElementById('Paginate-' + blockUid);
    if (nav) {
      nav.querySelectorAll('.nl-page-number').forEach(btn => {
        const active = parseInt(btn.dataset.page, 10) === page;
        btn.classList.toggle('is-active', active);
        btn.setAttribute('aria-current', active ? 'page' : 'false');
      });

      // 前/次の活性制御
      const prev = nav.querySelector('.nl-page-btn.prev');
      const next = nav.querySelector('.nl-page-btn.next');
      if (prev) prev.disabled = page <= 1;
      if (next) next.disabled = page >= maxPage;

      // 現在ページを nav 自身に記録
      nav.dataset.currentPage = String(page);
    }
  }

  // 数字ボタン
  document.querySelectorAll('.nl-page-number').forEach(btn => {
    btn.addEventListener('click', (e) => {
      const target = e.currentTarget.getAttribute('data-target');
      const page = parseInt(e.currentTarget.getAttribute('data-page'), 10) || 1;
      updatePager(target, page);
    });
  });

  // 前へ/次へ
  document.querySelectorAll('.nl-page-btn').forEach(btn => {
    btn.addEventListener('click', (e) => {
      const nav = e.currentTarget.closest('.nl-pagination');
      const blockUid = e.currentTarget.getAttribute('data-target');
      const move = parseInt(e.currentTarget.getAttribute('data-move'), 10) || 0;
      const current = parseInt(nav?.dataset.currentPage || '1', 10) || 1;
      updatePager(blockUid, current + move);
    });
  });

  // 初期化（全ブロック1ページ目表示に揃える）
  document.querySelectorAll('.nl-pagination').forEach(nav => {
    const blockUid = nav.id.replace('Paginate-', '');
    updatePager(blockUid, 1);
  });
});
</script>




{% comment %}
<script>{
  // 要素の取得
  const tabItem{{ tab_name }} = document.querySelectorAll('.section-{{ section.id }} .tab-item');
  const tabContent{{ tab_name }} = document.querySelectorAll('.section-{{ section.id }} .tab-content');
  
  // tabItemに対してクリックイベントを追加
  // クリックした時にtabToggle関数を発火
  for (var i = 0; i < tabItem{{ tab_name }}.length; i++) {
    tabItem{{ tab_name }}[i].addEventListener('click', function(){
      // tabItemとtabContentの.activeを削除する
      for (var i = 0; i < tabItem{{ tab_name }}.length; i++) {
      tabItem{{ tab_name }}[i].classList.remove('active');
      }
      for (var i = 0; i < tabContent{{ tab_name }}.length; i++) {
      tabContent{{ tab_name }}[i].classList.remove('active');
      }

      // クリックしたtabItemに.activeを追加
      this.classList.add('active');

      // tabItemを配列にする、下記のようになる
      // [<li class="tab-item active">About</li>, <li class="tab-item">Works</li>, <li class="tab-item">Contact</li>]
      const aryTabs{{ tab_name }} = Array.prototype.slice.call(tabItem{{ tab_name }});

      // 配列に格納したキーワードと最初一致したインデックスを格納
      // <li class="tab-item active">About</li>の場合は「0」が返ってくる
      const index{{ tab_name }} = aryTabs{{ tab_name }}.indexOf(this);

      // インデックスに対応したtabContentに.activeを追加
      tabContent{{ tab_name }}[index{{ tab_name }}].classList.add('active');
    });
  }
}</script>
{% endcomment %}
  

{% endif %}

{% schema %}
{
  "name": "カスタムブログ記事一覧",
  "tag": "section",
  "class": "section",
    "disabled_on": {
    "groups": ["header"]
  },
  "settings": [
    {
      "type": "select",
      "id": "tab_position",
      "default": "left",
      "label": "タブ位置",
      "options": [
        { "value": "left", "label": "左" },
        { "value": "center", "label": "中央" },
        { "value": "right", "label": "右" }
      ]
    },
    {
      "type": "select",
      "id": "tab_position_row",
      "default": "stack",
      "label": "タブが長いときの位置",
      "options": [
        { "value": "stack", "label": "折り返す" },
        { "value": "scroll", "label": "横スクロールで表示" }
      ]
    },
    {
    "type": "header",
    "content": "表示設定"
    },
    {
      "type": "select",
      "id": "design_type",
      "default": "type_default",
      "label": "デザイン",
      "options": [
        { "value": "type_default", "label": "デフォルト" },
        { "value": "type_card", "label": "カード" }
      ],
      "info": "カードの場合はデスクトップの列数を2,モバイルでの列数を1に設定してください。"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 2,
      "max": 20,
      "step": 1,
      "default": 4,
      "label": "表示する最大の数"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 5,
      "step": 1,
      "default": 4,
      "label": "t:sections.featured-collection.settings.columns_desktop.label"
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "label": "ブログを全幅にする",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_view_all",
      "default": true,
      "label": "t:sections.featured-collection.settings.show_view_all.label"
    },
    {
      "type": "select",
      "id": "view_all_style",
      "label": "t:sections.featured-collection.settings.view_all_style.label",
      "options": [
        {
          "value": "link",
          "label": "t:sections.featured-collection.settings.view_all_style.options__1.label"
        },
        {
          "value": "outline",
          "label": "t:sections.featured-collection.settings.view_all_style.options__2.label"
        },
        {
          "value": "solid",
          "label": "t:sections.featured-collection.settings.view_all_style.options__3.label"
        }
      ],
      "default": "solid"
    },
    {
      "type": "checkbox",
      "id": "enable_desktop_slider",
      "label": "t:sections.featured-collection.settings.enable_desktop_slider.label",
      "default": false
    },
    {
      "type": "select",
      "id": "color_scheme",
      "options": [
        {
          "value": "accent-1",
          "label": "t:sections.all.colors.accent_1.label"
        },
        {
          "value": "accent-2",
          "label": "t:sections.all.colors.accent_2.label"
        },
        {
          "value": "background-1",
          "label": "t:sections.all.colors.background_1.label"
        },
        {
          "value": "background-2",
          "label": "t:sections.all.colors.background_2.label"
        },
        {
          "value": "inverse",
          "label": "t:sections.all.colors.inverse.label"
        }
      ],
      "default": "background-1",
      "label": "t:sections.all.colors.label",
      "info": "t:sections.all.colors.has_cards_info"
    },
    {
      "type": "header",
      "content": "t:sections.featured-collection.settings.header_mobile.content"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "default": "2",
      "label": "t:sections.featured-collection.settings.columns_mobile.label",
      "options": [
        {
          "value": "1",
          "label": "t:sections.featured-collection.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.featured-collection.settings.columns_mobile.options__2.label"
        }
      ]
    },
    {
      "type": "checkbox",
      "id": "swipe_on_mobile",
      "default": false,
      "label": "t:sections.featured-collection.settings.swipe_on_mobile.label"
    },
    {
    "type": "header",
    "content": "共通設定"
    },
    {
      "type": "select",
      "id": "view_mode",
      "default": "all",
      "label": "表示状態",
      "options": [
        { "value": "all", "label": "通常表示" },
        { "value": "pc", "label": "PCのみ表示" },
        { "value": "sp", "label": "SPのみ表示" }
      ]
    },
    {
      "type": "header",
      "content": "見出し基本設定"
    },
    {
      "type": "checkbox",
      "id": "time",
      "default": false,
      "label": "投稿日の表示"
    },
    {
      "type": "text",
      "id": "d_title_en",
      "default": "Title",
      "label": "大見出し"
    },
    {
      "type": "text",
      "id": "d_title_jp",
      "default": "タイトル",
      "label": "サブ見出し"
    },
    {
      "type": "url",
      "id": "d_title_link",
      "label": "見出しリンクURL"
    },
    {
      "type": "text",
      "id": "d_title_link_text",
      "default": "一覧を見る",
      "label": "見出しリンクテキスト"
    },
    {
      "type": "checkbox",
      "id": "d_title_arrow",
      "default": true,
      "label": "見出しリンクの矢印表示"
    },
    {
      "type": "select",
      "id": "d_title_mode",
      "default": "default",
      "label": "見出し配置",
      "options": [
        { "value": "default", "label": "テーマ設定に準ずる" },
        { "value": "left", "label": "左" },
        { "value": "center", "label": "中央" },
        { "value": "right", "label": "右" }
      ]
    },
    {
      "type": "checkbox",
      "id": "d_title_margin_check",
      "default": false,
      "label": "見出し下マージンの値を反映"
    },
    {
      "type": "range",
      "id": "d_title_margin_bottom",
      "min": 0,
      "max": 4,
      "step": 0.1,
      "unit": "em",
      "label": "見出し下マージン",
      "default": 1
    },
    {
      "type": "checkbox",
      "id": "d_title_style",
      "default": false,
      "label": "見出しスタイルの書換を反映"
    },
    {
      "type": "header",
      "content": "見出しスタイルの書換項目"
    },
    {
      "type": "text",
      "id": "d_title_font",
      "label": "見出しのフォント指定",
      "info": "例：'Noto Sans JP'"
    },
    {
      "type": "range",
      "id": "d_title_size",
      "min": 16,
      "max": 64,
      "step": 2,
      "unit": "px",
      "label": "見出しフォントサイズ",
      "default": 30
    },
    {
      "type": "range",
      "id": "d_title_size_sp",
      "min": 14,
      "max": 64,
      "step": 2,
      "unit": "px",
      "label": "見出しフォントサイズSP",
      "default": 22
    },
    {
      "type": "color",
      "id": "d_title_color",
      "label": "見出しテキストカラー"
    },
    {
      "type": "text",
      "id": "d_title_jp_font",
      "label": "サブ見出しのフォント指定",
      "info": "例：'Noto Sans JP'"
    },
    {
      "type": "range",
      "id": "d_title_jp_size",
      "min": 10,
      "max": 32,
      "step": 2,
      "unit": "px",
      "label": "サブ見出しフォントサイズ",
      "default": 12
    },
    {
      "type": "range",
      "id": "d_title_jp_size_sp",
      "min": 10,
      "max": 32,
      "step": 2,
      "unit": "px",
      "label": "サブ見出しフォントサイズSP",
      "default": 12
    },
    {
      "type": "color",
      "id": "d_title_jp_color",
      "label": "サブ見出しテキストカラー"
    },
    {
      "type": "header",
      "content": "コンテンツスタイル"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "背景色"
    },
    {
      "type": "image_picker",
      "id": "background_image",
      "label": "背景画像"
    },
    {
      "type": "checkbox",
      "id": "section_margin",
      "default": true,
      "label": "セクション余白設定を有効にする"
    },
    {
      "type": "range",
      "id": "padding",
      "min": 0,
      "max": 120,
      "step": 4,
      "unit": "px",
      "label": "上下内側余白",
      "default": 0
    },
    {
      "type": "range",
      "id": "padding_sp",
      "min": 0,
      "max": 120,
      "step": 4,
      "unit": "px",
      "label": "上下内側余白SP",
      "default": 0
    },
    
    {
      "type": "range",
      "id": "margin_bottom",
      "min": 0,
      "max": 120,
      "step": 4,
      "unit": "px",
      "label": "下部外側余白",
      "default": 32
    },
    {
      "type": "range",
      "id": "margin_bottom_sp",
      "min": 0,
      "max": 120,
      "step": 4,
      "unit": "px",
      "label": "下部外側余白SP",
      "default": 32
    },
    {
      "type": "text",
      "id": "section_class_plus",
      "label": "section追加class"
    }
  ],
  "blocks": [
    {
      "type": "tab",
      "name": "ブログ",
      "limit": 10,
      "settings" : [
        {
          "type": "text",
          "id": "tab",
          "label":"タブ名"
        },
        {
          "type": "blog",
          "id": "blog_cate",
          "label": "ブログカテゴリー"
        },
        {
          "type": "text",
          "id": "filter_tag",
          "label": "抽出するタグ"
        },
        {
          "type": "url",
          "id": "blog_url",
          "label": "ほかの事例も見るボタンのリンク先"
        }
      ] 
    }
  ],
  "presets": [
    {
      "name": "ブログ一覧01"
    }
  ]
}
{% endschema %}
